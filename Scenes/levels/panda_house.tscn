[gd_scene load_steps=10 format=4 uid="uid://d1gruhw3i0i43"]

[ext_resource type="TileSet" uid="uid://be65eo2fvqoya" path="res://Scenes/resources/level.tres" id="1_07x4b"]
[ext_resource type="Script" uid="uid://cjn0n0sk7rxny" path="res://Scenes/levels/relay.gd" id="1_hvl0c"]
[ext_resource type="Texture2D" uid="uid://crlp03dxtmr1n" path="res://assets/character_art/original/darius_bf.png" id="3_0dyl8"]
[ext_resource type="Script" uid="uid://cfesfw77li0a" path="res://Scenes/levels/panda_area.gd" id="4_0dyl8"]
[ext_resource type="Script" uid="uid://bek722mktypw5" path="res://Scripts/transition/to_village_2.gd" id="4_hvl0c"]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_hvl0c"]
size = Vector2(462.359, 341.744)

[sub_resource type="Shader" id="Shader_07x4b"]
code = "shader_type canvas_item;
// BLENDING MODES
vec3 multiply(vec3 base, vec3 blend) {
    return base * blend;
}
vec3 screen(vec3 base, vec3 blend) {
    return 1.0 - (1.0 - base) * (1.0 - blend);
}
vec3 darken(vec3 base, vec3 blend) {
    return min(base, blend);
}
vec3 lighten(vec3 base, vec3 blend) {
    return max(base, blend);
}
vec3 difference(vec3 base, vec3 blend) {
    return abs(base - blend);
}
vec3 exclusion(vec3 base, vec3 blend) {
    return base + blend - 2.0 * base * blend;
}
vec3 overlay(vec3 base, vec3 blend) {
    vec3 limit = step(0.5, base);
    return mix(2.0 * base * blend, 1.0 - 2.0 * (1.0 - base) * (1.0 - blend), limit);
}
vec3 hard_light(vec3 base, vec3 blend) {
    vec3 limit = step(0.5, blend);
    return mix(2.0 * base * blend, 1.0 - 2.0 * (1.0 - base) * (1.0 - blend), limit);
}
vec3 soft_light(vec3 base, vec3 blend) {
    vec3 limit = step(0.5, blend);
    return mix(2.0 * base * blend + base * base * (1.0 - 2.0 * blend), sqrt(base) * (2.0 * blend - 1.0) + (2.0 * base) * (1.0 - blend), limit);
}
vec3 color_dodge(vec3 base, vec3 blend) {
    return base / (1.0 - blend);
}
vec3 linear_dodge(vec3 base, vec3 blend) {
    return base + blend;
}
vec3 color_burn(vec3 base, vec3 blend) {
    return 1.0 - (1.0 - base) / blend;
}
vec3 linear_burn(vec3 base, vec3 blend) {
    return base + blend - 1.0;
}

//thank u claude pentru photoshop math functions

// Converts RGB to HSL
vec3 rgb_to_hsl(vec3 color) {
    float maxColor = max(max(color.r, color.g), color.b);
    float minColor = min(min(color.r, color.g), color.b);
    float delta = maxColor - minColor;

    float h = 0.0;
    float s = 0.0;
    float l = (maxColor + minColor) / 2.0;

    if (delta > 0.0) {
        s = l < 0.5 ? delta / (maxColor + minColor) : delta / (2.0 - maxColor - minColor);

        if (maxColor == color.r) {
            h = (color.g - color.b) / delta + (color.g < color.b ? 6.0 : 0.0);
        } else if (maxColor == color.g) {
            h = (color.b - color.r) / delta + 2.0;
        } else {
            h = (color.r - color.g) / delta + 4.0;
        }
        h /= 6.0;
    }

    return vec3(h, s, l);
}

// Function to help with HSL to RGB conversion
float hue_to_rgb(float p, float q, float t) {
    if (t < 0.0) t += 1.0;
    if (t > 1.0) t -= 1.0;
    if (t < 1.0/6.0) return p + (q - p) * 6.0 * t;
    if (t < 1.0/2.0) return q;
    if (t < 2.0/3.0) return p + (q - p) * (2.0/3.0 - t) * 6.0;
    return p;
}

// Converts HSL to RGB
vec3 hsl_to_rgb(vec3 hsl) {
    float h = hsl.x;
    float s = hsl.y;
    float l = hsl.z;

    float r, g, b;

    if (s == 0.0) {
        r = g = b = l; // Achromatic
    } else {
        float q = l < 0.5 ? l * (1.0 + s) : l + s - l * s;
        float p = 2.0 * l - q;
        r = hue_to_rgb(p, q, h + 1.0/3.0);
        g = hue_to_rgb(p, q, h);
        b = hue_to_rgb(p, q, h - 1.0/3.0);
    }

    return vec3(r, g, b);
}

// Photoshop/Krita Color mode - takes hue and saturation from blend layer, luminance from base layer
vec3 ps_color(vec3 base, vec3 blend) {
    vec3 base_hsl = rgb_to_hsl(base);
    vec3 blend_hsl = rgb_to_hsl(blend);

    // Take hue and saturation from blend, luminance from base
    return hsl_to_rgb(vec3(blend_hsl.x, blend_hsl.y, base_hsl.z));
}

// Hue mode - takes hue from blend layer, saturation and luminance from base
vec3 ps_hue(vec3 base, vec3 blend) {
    vec3 base_hsl = rgb_to_hsl(base);
    vec3 blend_hsl = rgb_to_hsl(blend);

    // Take hue from blend, saturation and luminance from base
    return hsl_to_rgb(vec3(blend_hsl.x, base_hsl.y, base_hsl.z));
}

// Saturation mode - takes saturation from blend layer, hue and luminance from base
vec3 ps_saturation(vec3 base, vec3 blend) {
    vec3 base_hsl = rgb_to_hsl(base);
    vec3 blend_hsl = rgb_to_hsl(blend);

    // Take saturation from blend, hue and luminance from base
    return hsl_to_rgb(vec3(base_hsl.x, blend_hsl.y, base_hsl.z));
}

// Luminosity mode - takes luminance from blend layer, hue and saturation from base
vec3 ps_luminosity(vec3 base, vec3 blend) {
    vec3 base_hsl = rgb_to_hsl(base);
    vec3 blend_hsl = rgb_to_hsl(blend);

    // Take luminance from blend, hue and saturation from base
    return hsl_to_rgb(vec3(base_hsl.x, base_hsl.y, blend_hsl.z));
}

// Grayscale/Black and White conversion - different methods available
vec3 grayscale_average(vec3 color) {
    float gray = (color.r + color.g + color.b) / 3.0;
    return vec3(gray);
}

vec3 grayscale_luminance(vec3 color) {
    // Human eye perceives green as brighter than red, and red as brighter than blue
    float gray = dot(color, vec3(0.299, 0.587, 0.114));
    return vec3(gray);
}

vec3 grayscale_lightness(vec3 color) {
    float gray = (max(max(color.r, color.g), color.b) + min(min(color.r, color.g), color.b)) / 2.0;
    return vec3(gray);
}

uniform sampler2D SCREEN_TEXTURE : hint_screen_texture, filter_linear_mipmap;
uniform vec4 tint : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform float opacity : hint_range(0.0, 1.0) = 1.0;
uniform int blend_mode : hint_enum(\"Normal\", \"Multiply\", \"Screen\", \"Darken\", \"Lighten\", \"Difference\", \"Exclusion\", \"Overlay\", \"Hard Light\", \"Soft Light\", \"Color Dodge\", \"Linear Dodge\", \"Color Burn\", \"Linear Burn\",
							\"Color\", \"Hue\", \"Saturation\", \"Luminosity\", \"Grayscale avg\", \"Grayscale Luminance\", \"Grayscale Lightness\") = 0;

void fragment() {
    // Get the color behind our ColorRect (the base layer)
    vec4 screen_color = texture(SCREEN_TEXTURE, SCREEN_UV);

    // Our blend layer is the ColorRect with the tint applied
    vec3 blend_color = tint.rgb;

    // Apply the selected blending mode
    vec3 result;

    if (blend_mode == 0) {
        result = mix(screen_color.rgb, blend_color, opacity);
    } else if (blend_mode == 1) {
        result = mix(screen_color.rgb, multiply(screen_color.rgb, blend_color), opacity);
    } else if (blend_mode == 2) {
        result = mix(screen_color.rgb, screen(screen_color.rgb, blend_color), opacity);
    } else if (blend_mode == 3) {
        result = mix(screen_color.rgb, darken(screen_color.rgb, blend_color), opacity);
    } else if (blend_mode == 4) {
        result = mix(screen_color.rgb, lighten(screen_color.rgb, blend_color), opacity);
    } else if (blend_mode == 5) {
        result = mix(screen_color.rgb, difference(screen_color.rgb, blend_color), opacity);
    } else if (blend_mode == 6) {
        result = mix(screen_color.rgb, exclusion(screen_color.rgb, blend_color), opacity);
    } else if (blend_mode == 7) {
        result = mix(screen_color.rgb, overlay(screen_color.rgb, blend_color), opacity);
    } else if (blend_mode == 8) {
        result = mix(screen_color.rgb, hard_light(screen_color.rgb, blend_color), opacity);
    } else if (blend_mode == 9) {
        result = mix(screen_color.rgb, soft_light(screen_color.rgb, blend_color), opacity);
    } else if (blend_mode == 10) {
        result = mix(screen_color.rgb, color_dodge(screen_color.rgb, blend_color), opacity);
    } else if (blend_mode == 11) {
        result = mix(screen_color.rgb, linear_dodge(screen_color.rgb, blend_color), opacity);
    } else if (blend_mode == 12) {
        result = mix(screen_color.rgb, color_burn(screen_color.rgb, blend_color), opacity);
    } else if (blend_mode == 13) {
		result = mix(screen_color.rgb, ps_color(screen_color.rgb, blend_color), opacity);
    }else if (blend_mode == 14) {
		result = mix(screen_color.rgb, ps_hue(screen_color.rgb, blend_color), opacity);
	}else if (blend_mode == 15) {
		result = mix(screen_color.rgb, ps_saturation(screen_color.rgb, blend_color), opacity);
	}
	else if (blend_mode == 16) {
		result = mix(screen_color.rgb, ps_luminosity(screen_color.rgb, blend_color), opacity);
	}else if (blend_mode == 17) {
		result = grayscale_average(screen_color.rgb);
	}else if (blend_mode == 18) {
		result = grayscale_luminance(screen_color.rgb);
	}else if (blend_mode == 19) {
		result = grayscale_lightness(screen_color.rgb);
	}

    // Final output
    COLOR = vec4(result, screen_color.a * tint.a);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_hvl0c"]
shader = SubResource("Shader_07x4b")
shader_parameter/tint = Color(0.900862, 0.640934, 0.311043, 1)
shader_parameter/opacity = 0.27
shader_parameter/blend_mode = 8

[sub_resource type="RectangleShape2D" id="RectangleShape2D_07x4b"]
size = Vector2(25, 46)

[node name="PandaHouse" type="Node2D"]
script = ExtResource("1_hvl0c")

[node name="tiles" type="Node2D" parent="."]

[node name="ground" type="TileMapLayer" parent="tiles"]
texture_filter = 1
tile_map_data = PackedByteArray("AAAAAAAATwAKAAYAAAAAAAEATwAKAAYAAAAAAAIATwAKAAYAAAABAAAATwALAAYAAAABAAEATwALAAYAAAABAAIATwALAAYAAAACAAAATwAKAAYAAAACAAEATwAKAAYAAAACAAIATwAKAAYAAAADAAAATwALAAYAAAADAAEATwALAAYAAAADAAIATwALAAYAAAAAAAMATwAKAAYAAAAAAAQATwAKAAYAAAAAAAUATwAKAAYAAAABAAMATwALAAYAAAABAAQATwALAAYAAAABAAUATwALAAYAAAACAAMATwAKAAYAAAACAAQATwAKAAYAAAACAAUATwAKAAYAAAADAAMATwALAAYAAAADAAQATwALAAYAAAADAAUATwALAAYAAAAAAAYATwAKAAYAAAAAAAcATwAKAAYAAAAAAAgATwAKAAYAAAABAAYATwALAAYAAAABAAcATwALAAYAAAABAAgATwALAAYAAAACAAYATwAKAAYAAAACAAcATwAKAAYAAAACAAgATwAKAAYAAAADAAYATwALAAYAAAADAAcATwALAAYAAAADAAgATwALAAYAAAAEAAAATwAKAAYAAAAEAAEATwAKAAYAAAAEAAIATwAKAAYAAAAFAAAATwALAAYAAAAFAAEATwALAAYAAAAFAAIATwALAAYAAAAGAAAATwAKAAYAAAAGAAEATwAKAAYAAAAGAAIATwAKAAYAAAAHAAAATwALAAYAAAAHAAEATwALAAYAAAAHAAIATwALAAYAAAAEAAMATwAKAAYAAAAEAAQATwAKAAYAAAAEAAUATwAKAAYAAAAFAAMATwALAAYAAAAFAAQATwALAAYAAAAFAAUATwALAAYAAAAGAAMATwAKAAYAAAAGAAQATwAKAAYAAAAGAAUATwAKAAYAAAAHAAMATwALAAYAAAAHAAQATwALAAYAAAAHAAUATwALAAYAAAAEAAYATwAKAAYAAAAEAAcATwAKAAYAAAAEAAgATwAKAAYAAAAFAAYATwALAAYAAAAFAAcATwALAAYAAAAFAAgATwALAAYAAAAGAAYATwAKAAYAAAAGAAcATwAKAAYAAAAGAAgATwAKAAYAAAAHAAYATwALAAYAAAAHAAcATwALAAYAAAAHAAgATwALAAYAAAAIAAAATwAKAAYAAAAIAAEATwAKAAYAAAAIAAIATwAKAAYAAAAJAAAATwALAAYAAAAJAAEATwALAAYAAAAJAAIATwALAAYAAAAKAAAATwAKAAYAAAAKAAEATwAKAAYAAAAKAAIATwAKAAYAAAALAAAATwALAAYAAAALAAEATwALAAYAAAALAAIATwALAAYAAAAIAAMATwAKAAYAAAAIAAQATwAKAAYAAAAIAAUATwAKAAYAAAAJAAMATwALAAYAAAAJAAQATwALAAYAAAAJAAUATwALAAYAAAAKAAMATwAKAAYAAAAKAAQATwAKAAYAAAAKAAUATwAKAAYAAAALAAMATwALAAYAAAALAAQATwALAAYAAAALAAUATwALAAYAAAAIAAYATwAKAAYAAAAIAAcATwAKAAYAAAAIAAgATwAKAAYAAAAJAAYATwALAAYAAAAJAAcATwALAAYAAAAJAAgATwALAAYAAAAKAAYATwAKAAYAAAAKAAcATwAKAAYAAAAKAAgATwAKAAYAAAALAAYATwALAAYAAAALAAcATwALAAYAAAALAAgATwALAAYAAAAMAAAATwAKAAYAAAAMAAEATwAKAAYAAAAMAAIATwAKAAYAAAANAAAATwALAAYAAAANAAEATwALAAYAAAANAAIATwALAAYAAAAOAAAATwAKAAYAAAAOAAEATwAKAAYAAAAOAAIATwAKAAYAAAAMAAMATwAKAAYAAAAMAAQATwAKAAYAAAAMAAUATwAKAAYAAAANAAMATwALAAYAAAANAAQATwALAAYAAAANAAUATwALAAYAAAAOAAMATwAKAAYAAAAOAAQATwAKAAYAAAAOAAUATwAKAAYAAAAMAAYATwAKAAYAAAAMAAcATwAKAAYAAAAMAAgATwAKAAYAAAANAAYATwALAAYAAAANAAcATwALAAYAAAANAAgATwALAAYAAAAOAAYATwAKAAYAAAAOAAcATwAKAAYAAAAOAAgATwAKAAYAAAAPAAAATwALAAYAAAAPAAEATwALAAYAAAAPAAIATwALAAYAAAAPAAMATwALAAYAAAAPAAQATwALAAYAAAAPAAUATwALAAYAAAAPAAYATwALAAYAAAAPAAcATwALAAYAAAAPAAgATwALAAYAAAAAAAkATwAKAAYAAAAAAAoATwAKAAYAAAAAAAsATwAKAAYAAAABAAkATwALAAYAAAABAAoATwALAAYAAAABAAsATwALAAYAAAACAAkATwAKAAYAAAACAAoATwAKAAYAAAACAAsATwAKAAYAAAADAAkATwALAAYAAAADAAoATwALAAYAAAADAAsATwALAAYAAAAEAAkATwAKAAYAAAAEAAoATwAKAAYAAAAEAAsATwAKAAYAAAAFAAkATwALAAYAAAAFAAoATwALAAYAAAAFAAsATwALAAYAAAAGAAkATwAKAAYAAAAGAAoATwAKAAYAAAAGAAsATwAKAAYAAAAHAAkATwALAAYAAAAHAAoATwALAAYAAAAHAAsATwALAAYAAAAIAAkATwAKAAYAAAAIAAoATwAKAAYAAAAIAAsATwAKAAYAAAAJAAkATwALAAYAAAAJAAoATwALAAYAAAAJAAsATwALAAYAAAAKAAkATwAKAAYAAAAKAAoATwAKAAYAAAAKAAsATwAKAAYAAAALAAkATwALAAYAAAALAAoATwALAAYAAAALAAsATwALAAYAAAAMAAkATwAKAAYAAAAMAAoATwAKAAYAAAAMAAsATwAKAAYAAAANAAkATwALAAYAAAANAAoATwALAAYAAAANAAsATwALAAYAAAAOAAkATwAKAAYAAAAOAAoATwAKAAYAAAAOAAsATwAKAAYAAAAPAAkATwALAAYAAAAPAAoATwALAAYAAAAPAAsATwALAAYAAAAQAAAATwAKAAYAAAAQAAEATwAKAAYAAAAQAAIATwAKAAYAAAARAAAATwALAAYAAAARAAEATwALAAYAAAARAAIATwALAAYAAAASAAAATwAKAAYAAAASAAEATwAKAAYAAAASAAIATwAKAAYAAAATAAAATwALAAYAAAATAAEATwALAAYAAAATAAIATwALAAYAAAAQAAMATwAKAAYAAAAQAAQATwAKAAYAAAAQAAUATwAKAAYAAAARAAMATwALAAYAAAARAAQATwALAAYAAAARAAUATwALAAYAAAASAAMATwAKAAYAAAASAAQATwAKAAYAAAASAAUATwAKAAYAAAATAAMATwALAAYAAAATAAQATwALAAYAAAATAAUATwALAAYAAAAQAAYATwAKAAYAAAAQAAcATwAKAAYAAAAQAAgATwAKAAYAAAARAAYATwALAAYAAAARAAcATwALAAYAAAARAAgATwALAAYAAAASAAYATwAKAAYAAAASAAcATwAKAAYAAAASAAgATwAKAAYAAAATAAYATwALAAYAAAATAAcATwALAAYAAAATAAgATwALAAYAAAAQAAkATwAKAAYAAAAQAAoATwAKAAYAAAAQAAsATwAKAAYAAAARAAkATwALAAYAAAARAAoATwALAAYAAAARAAsATwALAAYAAAASAAkATwAKAAYAAAASAAoATwAKAAYAAAASAAsATwAKAAYAAAATAAkATwALAAYAAAATAAoATwALAAYAAAATAAsATwALAAYAAAAUAAAATwAKAAYAAAAUAAEATwAKAAYAAAAUAAIATwAKAAYAAAAUAAMATwAKAAYAAAAUAAQATwAKAAYAAAAUAAUATwAKAAYAAAAUAAYATwAKAAYAAAAUAAcATwAKAAYAAAAUAAgATwAKAAYAAAAUAAkATwAKAAYAAAAUAAoATwAKAAYAAAAUAAsATwAKAAYAAAAAAAwATwAKAAYAAAABAAwATwALAAYAAAACAAwATwAKAAYAAAADAAwATwALAAYAAAAEAAwATwAKAAYAAAAFAAwATwALAAYAAAAGAAwATwAKAAYAAAAHAAwATwALAAYAAAAIAAwATwAKAAYAAAAJAAwATwALAAYAAAAKAAwATwAKAAYAAAALAAwATwALAAYAAAAMAAwATwAKAAYAAAANAAwATwALAAYAAAAOAAwATwAKAAYAAAAPAAwATwALAAYAAAAQAAwATwAKAAYAAAARAAwATwALAAYAAAASAAwATwAKAAYAAAATAAwATwALAAYAAAAVAAAATwALAAYAAAAVAAEATwALAAYAAAAVAAIATwALAAYAAAAVAAMATwALAAYAAAAVAAQATwALAAYAAAAVAAUATwALAAYAAAAVAAYATwALAAYAAAAVAAcATwALAAYAAAAVAAgATwALAAYAAAAVAAkATwALAAYAAAAVAAoATwALAAYAAAAVAAsATwALAAYAAAAUAAwATwAKAAYAAAAVAAwATwALAAYAAAAJAP3/TwACAAIAAAAJAP7/TwACAAIAAAAKAP3/UAAAAAAAAAAKAP7/UAAAAAEAAAAKAP//UAAAAAIAAAAAAPz/TwABAAEAAAAAAP3/TwABAAIAAAABAPz/TwACAAEAAAABAP3/TwADAAMAAAACAP7/TwACAAIAAAACAP//TwACAAQAAAADAP7/TwADAAIAAAADAP//TwACAAQAAAAEAP7/TwACAAIAAAAEAP//TwACAAQAAAAFAP7/TwADAAIAAAAFAP//TwACAAQAAAAGAP7/TwACAAIAAAAGAP//TwACAAQAAAAHAP7/TwACAAIAAAAHAP//TwACAAQAAAAAAP7/TwABAAMAAAAAAP//TwABAAQAAAABAP7/TwADAAIAAAABAP//TwACAAQAAAACAPz/TwACAAEAAAACAP3/TwACAAMAAAADAPz/TwACAAEAAAADAP3/TwADAAMAAAAEAPz/TwACAAEAAAAEAP3/TwACAAMAAAAFAPz/TwACAAEAAAAFAP3/TwADAAMAAAAGAPz/TwACAAEAAAAGAP3/TwACAAMAAAAHAPz/TwACAAEAAAAHAP3/TwACAAIAAAAIAPz/TwACAAEAAAAIAP3/TwADAAIAAAAIAP7/TwADAAIAAAAIAP//TwACAAQAAAAJAPz/TwACAAEAAAAKAPz/TwACAAEAAAAJAP//TwACAAQAAAALAPz/TwACAAEAAAAMAPz/TwACAAEAAAANAPz/TwACAAEAAAAOAPz/TwACAAEAAAAPAPz/TwACAAEAAAAQAPz/TwACAAEAAAARAPz/TwACAAEAAAASAPz/TwACAAEAAAATAPz/TwACAAEAAAAUAPz/TwACAAEAAAAVAPz/TwACAAEAAAALAP//UAABAAIAAAAMAP//TwADAAQAAAANAP//TwACAAQAAAAOAP//TwACAAQAAAAPAP//TwACAAQAAAAQAP//TwACAAQAAAARAP//TwACAAQAAAASAP//TwACAAQAAAATAP//TwACAAQAAAAUAP//TwACAAQAAAAVAP//TwACAAQAAAAVAP3/TwACAAIAAAAVAP7/TwACAAIAAAALAP3/UAABAAAAAAALAP7/UAABAAEAAAAMAP3/TwADAAIAAAAMAP7/TwADAAMAAAANAP3/TwACAAIAAAANAP7/TwACAAIAAAAOAP3/TwACAAIAAAAOAP7/TwACAAIAAAAPAP3/TwACAAIAAAAPAP7/TwACAAIAAAAQAP3/TwACAAIAAAAQAP7/TwACAAIAAAARAP3/TwACAAIAAAARAP7/TwACAAIAAAASAP3/TwACAAIAAAASAP7/TwACAAIAAAATAP3/TwACAAIAAAATAP7/TwACAAIAAAAUAP3/TwACAAIAAAAUAP7/TwACAAIAAAAWAPv/TwARAAAAAAD///v/TwARAAAAABAWAA0ATwARAAAAACD//w0ATwARAAAAADAWAPz/TwARAAEAAAAWAP3/TwARAAEAAAAWAP7/TwARAAEAAAAWAP//TwARAAEAAAAWAAAATwARAAEAAAAWAAEATwARAAEAAAAWAAIATwARAAEAAAAWAAMATwARAAEAAAAWAAQATwARAAEAAAAWAAUATwARAAEAAAAWAAYATwARAAEAAAAWAAcATwARAAEAAAAWAAgATwARAAEAAAAWAAkATwARAAEAAAAWAAoATwARAAEAAAAWAAsATwARAAEAAAAWAAwATwARAAEAAAD///z/TwAAAAEAAAD///3/TwAAAAEAAAD///7/TwAAAAEAAAD/////TwAAAAEAAAD//wAATwAAAAEAAAD//wEATwAAAAEAAAD//wIATwAAAAEAAAD//wMATwAAAAEAAAD//wQATwAAAAEAAAD//wUATwAAAAEAAAD//wYATwAAAAEAAAD//wcATwAAAAEAAAD//wgATwAAAAEAAAD//wkATwAAAAEAAAD//woATwAAAAEAAAD//wsATwAAAAEAAAD//wwATwAAAAEAAAAAAA0ATwAOAAgAAAABAA0ATwAOAAgAAAACAA0ATwAOAAgAAAADAA0ATwAOAAgAAAAEAA0ATwAOAAgAAAAFAA0ATwAOAAgAAAAGAA0ATwAOAAgAAAAHAA0ATwAOAAgAAAAIAA0ATwAOAAgAAAAJAA0ATwAOAAgAAAAKAA0ATwAOAAgAAAALAA0ATwAOAAgAAAAMAA0ATwAOAAgAAAANAA0ATwAOAAgAAAAOAA0ATwAOAAgAAAAPAA0ATwAOAAgAAAAQAA0ATwAOAAgAAAARAA0ATwAOAAgAAAASAA0ATwAOAAgAAAATAA0ATwAOAAgAAAAUAA0ATwAOAAgAAAAVAA0ATwAOAAgAAAAAAPv/TwAGAAAAAAABAPv/TwAGAAAAAAACAPv/TwAGAAAAAAADAPv/TwAGAAAAAAAEAPv/TwAGAAAAAAAFAPv/TwAGAAAAAAAGAPv/TwAGAAAAAAAHAPv/TwAGAAAAAAAIAPv/TwAGAAAAAAAJAPv/TwAGAAAAAAAKAPv/TwAGAAAAAAALAPv/TwAGAAAAAAAMAPv/TwAGAAAAAAANAPv/TwAGAAAAAAAOAPv/TwAGAAAAAAAPAPv/TwAGAAAAAAAQAPv/TwAGAAAAAAARAPv/TwAGAAAAAAASAPv/TwAGAAAAAAATAPv/TwAGAAAAAAAUAPv/TwAGAAAAAAAVAPv/TwAGAAAAAAA=")
tile_set = ExtResource("1_07x4b")
collision_visibility_mode = 1

[node name="TileMapLayer2" type="TileMapLayer" parent="tiles"]
texture_filter = 1
tile_map_data = PackedByteArray("AAAKAP3/TgAGAAAAAAAKAP7/TgAGAAEAAAAKAP//TgAGAAIAAAALAP3/TgAHAAAAAAALAP7/TgAHAAEAAAALAP//TgAHAAIAAAAAAP7/UgACAAQAAAAAAP//UgACAAUAAAAAAAAAUgACAAYAAAABAP7/UgADAAQAAAABAP//UgADAAUAAAABAAAAUgADAAYAAAACAP7/UgAEAAQAAAACAP//UgAEAAUAAAACAAAAUgAEAAYAAAADAP7/UgACAAQAAAADAP//UgACAAUAAAADAAAAUgACAAYAAAAEAP7/UgADAAQAAAAEAP//UgADAAUAAAAEAAAAUgADAAYAAAAFAP7/UgAEAAQAAAAFAP//UgAEAAUAAAAFAAAAUgAEAAYAAAAGAP7/UgACAAQAAAAGAP//UgACAAUAAAAGAAAAUgACAAYAAAAHAP7/UgADAAQAAAAHAP//UgADAAUAAAAHAAAAUgADAAYAAAAIAP7/UgAEAAQAAAAIAP//UgAEAAUAAAAIAAAAUgAEAAYAAAAAAAUAUgAAAAwAAAAAAAYAUgAAAA0AAAAAAAcAUgAAAA4AAAAAAAgAUgAAAA8AAAABAAUAUgABAAwAAAABAAYAUgABAA0AAAABAAcAUgABAA4AAAABAAgAUgABAA8AAAACAAIAUgADABAAAAACAAMAUgADABEAAAADAAIAUgAEABAAAAADAAMAUgAEABEAAAAPAP7/UgAGAAwAAAAPAP//UgAGAA0AAAAPAAAAUgAGAA4AAAAQAP7/UgAHAAwAAAAQAP//UgAHAA0AAAAQAAAAUgAHAA4AAAARAP7/UgAIAAwAAAARAP//UgAIAA0AAAARAAAAUgAIAA4AAAASAP7/UgAJAAwAAAASAP//UgAJAA0AAAASAAAAUgAJAA4AAAATAP7/UgAKAAwAAAATAP//UgAKAA0AAAATAAAAUgAKAA4AAAAUAP7/UgALAAwAAAAUAP//UgALAA0AAAAUAAAAUgALAA4AAAAUAAEAUgALAA8AAAAVAP7/UgAMAAwAAAAVAP//UgAMAA0AAAAVAAAAUgAMAA4AAAAVAAEAUgAMAA8AAAAPAP3/UgAEAA8AAAAQAP3/UgAFAA8AAAAFAAIAUgAKAAIAAAAFAAMAUgAKAAMAAAAGAAIAUgALAAIAAAAGAAMAUgALAAMAAAAHAAIAUgAMAAIAAAAHAAMAUgAMAAMAAAAEAAUAUgAIAAIAAAAFAAUAUgAJAAIAAAASAAEAUgAIAAIAAAATAAEAUgAJAAIAAAADAAoAUgAAAAIAAAADAAsAUgAAAAMAAAAEAAoAUgABAAIAAAAEAAsAUgABAAMAAAAFAAoAUgACAAIAAAAFAAsAUgACAAMAAAAMAP7/UgAEAAcAAAAMAP//UgAEAAgAAAAMAAAAUgAEAAkAAAANAP7/UgAFAAcAAAANAP//UgAFAAgAAAANAAAAUgAFAAkAAAANAP3/UwAFAAEAAAA=")
tile_set = ExtResource("1_07x4b")

[node name="TileMapLayer" type="TileMapLayer" parent="tiles"]
texture_filter = 1
tile_map_data = PackedByteArray("AAAKAP3/TgAIAAAAAAAKAP7/TgAIAAEAAAAKAP//TgAIAAIAAAALAP3/TgAJAAAAAAALAP7/TgAJAAEAAAALAP//TgAJAAIAAAAKAAAAUgAIAAIAAAALAAAAUgAJAAIAAAAAAAEAUgACAAcAAAAAAAMAUgACAAcAAAATAP3/UgAAAAoAAAATAP7/UgAAAAsAAAAUAP7/UwAFAAQAAAARAP7/UwAGAAUAAAAVAP7/UwAHAAQAAAAVAP//UwACAAQAAAAQAAIAUwACAAQAAAAUAAQAUwADAAQAAAAPAAEAUwAAAAQAAAATAAMAUwAAAAQAAAATAAIAUwAAAAQAAAAPAAQAUwAEAAIAAAAVAAIAUwAEAAIAAAARAAEAUwAEAAIAAAASAP7/UwAEAAIAAAAVAAUAUwAEAAIAAAAEAAoAUwAFAAMAAAADAAoAUwAGAAEAAAABAP3/UwABAAEAAAAEAP3/UwAAAAEAAAAHAP3/UwABAAEAAAADAAgAUwAHAAIAAAAEAAgAUwAGAAIAAAAUAAgAUwAEAAEAAAAKAAoAUwACAAEAAAAJAAsAUwADAAEAAAAIAAoAUwAEAAAAAAAGAAYAUwAAAAIAAAAFAAoAUwABAAUAAAACAAUAUwACAAUAAAAUAAsAUwADAAUAAAAFAAEAUwABAAMAAAAGAAIAUwAAAAMAAAAIAAUAUwAFAAYAAAAIAAcAUwAHAAcAAAAKAAgAUwAEAAcAAAAOAAMAUwAEAAcAAAA=")
tile_set = ExtResource("1_07x4b")

[node name="TileMapLayer3" type="TileMapLayer" parent="tiles"]
texture_filter = 1
tile_set = ExtResource("1_07x4b")

[node name="collisions" type="TileMapLayer" parent="tiles"]
tile_map_data = PackedByteArray("AAD///v/AgADABAAAAAAAPv/AgADABAAAAABAPv/AgADABAAAAACAPv/AgADABAAAAADAPv/AgADABAAAAAEAPv/AgADABAAAAAFAPv/AgADABAAAAAGAPv/AgADABAAAAAHAPv/AgADABAAAAAIAPv/AgADABAAAAAJAPv/AgADABAAAAAKAPv/AgADABAAAAALAPv/AgADABAAAAAMAPv/AgADABAAAAANAPv/AgADABAAAAAOAPv/AgADABAAAAAPAPv/AgADABAAAAAQAPv/AgADABAAAAARAPv/AgADABAAAAASAPv/AgADABAAAAATAPv/AgADABAAAAAUAPv/AgADABAAAAAVAPv/AgADABAAAAAWAPv/AgADABAAAAAWAPz/AgADABAAAAAWAP3/AgADABAAAAAWAP7/AgADABAAAAAWAP//AgADABAAAAAWAAAAAgADABAAAAAWAAEAAgADABAAAAAWAAIAAgADABAAAAAWAAMAAgADABAAAAAWAAQAAgADABAAAAAWAAUAAgADABAAAAAWAAYAAgADABAAAAAWAAcAAgADABAAAAAWAAgAAgADABAAAAAWAAkAAgADABAAAAAWAAoAAgADABAAAAAWAAsAAgADABAAAAAWAAwAAgADABAAAAAWAA0AAgADABAAAAD//w0AAgADABAAAAAAAA0AAgADABAAAAABAA0AAgADABAAAAACAA0AAgADABAAAAADAA0AAgADABAAAAAEAA0AAgADABAAAAAFAA0AAgADABAAAAAGAA0AAgADABAAAAAHAA0AAgADABAAAAAIAA0AAgADABAAAAAJAA0AAgADABAAAAAKAA0AAgADABAAAAALAA0AAgADABAAAAAMAA0AAgADABAAAAANAA0AAgADABAAAAAOAA0AAgADABAAAAAPAA0AAgADABAAAAAQAA0AAgADABAAAAARAA0AAgADABAAAAASAA0AAgADABAAAAATAA0AAgADABAAAAAUAA0AAgADABAAAAAVAA0AAgADABAAAAD///z/AgADABAAAAD///3/AgADABAAAAD///7/AgADABAAAAD/////AgADABAAAAD//wAAAgADABAAAAD//wEAAgADABAAAAD//wIAAgADABAAAAD//wMAAgADABAAAAD//wQAAgADABAAAAD//wUAAgADABAAAAD//wYAAgADABAAAAD//wcAAgADABAAAAD//wgAAgADABAAAAD//wkAAgADABAAAAD//woAAgADABAAAAD//wsAAgADABAAAAD//wwAAgADABAAAAAPAAEAAgADABAAAAAQAAIAAgADABAAAAAOAAMAAgADABAAAAAPAAQAAgADABAAAAAUAAQAAgADABAAAAATAAMAAgADABAAAAARAAEAAgADABAAAAATAAIAAgADABAAAAAVAAUAAgADABAAAAAUAAgAAgADABAAAAAUAAsAAgADABAAAAAQAAcAAgADABAAAAAQAAgAAgADABAAAAAPAP7/AgADABAAAAAQAP7/AgADABAAAAARAP7/AgADABAAAAASAP7/AgADABAAAAATAP7/AgADABAAAAAUAP7/AgADABAAAAAVAP7/AgADABAAAAAVAP//AgADABAAAAAVAAAAAgADABAAAAAAAAAAAgADABAAAAAAAAIAAgADABAAAAADAAIAAgADABAAAAACAAIAAgADABAAAAAGAAIAAgADABAAAAAFAAEAAgADABAAAAAIAAUAAgADABAAAAACAAUAAgADABAAAAAGAAYAAgADABAAAAAIAAcAAgADABAAAAAKAAgAAgADABAAAAAKAAoAAgADABAAAAAJAAsAAgADABAAAAAIAAoAAgADABAAAAADAAoAAgADABAAAAAEAAoAAgADABAAAAAFAAoAAgADABAAAAADAAgAAgADABAAAAAEAAgAAgADABAAAAAAAAUAAgADABAAAAAAAAYAAgADABAAAAAAAAcAAgADABAAAAAKAPz/AgADABAAAAALAPz/AgADABAAAAAAAP7/AgADABAAAAABAP7/AgADABAAAAACAP7/AgADABAAAAADAP7/AgADABAAAAAEAP7/AgADABAAAAAFAP7/AgADABAAAAAGAP7/AgADABAAAAAHAP7/AgADABAAAAAIAP7/AgADABAAAAA=")
tile_set = ExtResource("1_07x4b")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture_filter = 1
position = Vector2(264, 146)
scale = Vector2(0.348214, 0.348214)
texture = ExtResource("3_0dyl8")

[node name="InteractionAreaPanda" type="Area2D" parent="Sprite2D"]
script = ExtResource("4_0dyl8")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Sprite2D/InteractionAreaPanda"]
position = Vector2(-64.6154, -12.9231)
shape = SubResource("RectangleShape2D_hvl0c")

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_hvl0c")
offset_left = -4.0
offset_top = -67.0
offset_right = 354.0
offset_bottom = 212.0

[node name="to_village_2" type="Area2D" parent="."]
script = ExtResource("4_hvl0c")

[node name="CollisionShape2D" type="CollisionShape2D" parent="to_village_2"]
position = Vector2(175.5, -22)
shape = SubResource("RectangleShape2D_07x4b")

[connection signal="body_entered" from="Sprite2D/InteractionAreaPanda" to="Sprite2D/InteractionAreaPanda" method="_on_body_entered"]
[connection signal="body_exited" from="Sprite2D/InteractionAreaPanda" to="Sprite2D/InteractionAreaPanda" method="_on_body_exited"]
[connection signal="blackscreen" from="to_village_2" to="." method="_on_to_village_2_blackscreen"]
[connection signal="body_entered" from="to_village_2" to="to_village_2" method="_on_body_entered"]
[connection signal="body_exited" from="to_village_2" to="to_village_2" method="_on_body_exited"]
